plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.sonarqube" version "2.8"
	id 'jacoco'
}

group = 'br.com.codenation'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jacoco {
	toolVersion = "0.8.5"
	reportsDir = file("$buildDir/customJacocoReportDir")
}

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	implementation (
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-data-rest',
	 		'org.springframework.boot:spring-boot-starter-validation',
	 		'org.springframework.boot:spring-boot-starter-actuator',
	 		'org.springframework.boot:spring-boot-starter-security',
			'io.springfox:springfox-bean-validators:3.0.0',
			'io.jsonwebtoken:jjwt:0.9.1',
	)

	runtimeOnly(
			'org.postgresql:postgresql',
			'org.springframework.boot:spring-boot-devtools',
			'javax.validation:validation-api:2.0.1.Final',
	)

	compileOnly (
			'javax.validation:validation-api:2.0.1.Final',
			'org.projectlombok:lombok',
	)

	compile (
			'io.springfox:springfox-boot-starter:3.0.0',
			'io.springfox:springfox-oas:3.0.0',
	)

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation(
			'org.springframework.boot:spring-boot-starter-test'
	) {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	testImplementation(
			'org.junit.jupiter:junit-jupiter-api',
			'org.mockito:mockito-junit-jupiter',
			'org.junit.jupiter:junit-jupiter-engine',
			'com.h2database:h2',
			'org.springframework.security:spring-security-test'
	)


}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
		csv.enabled true
		html.destination file("${buildDir}/jacocoHtml")
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "acelera-codenation_erros-center"
		property "sonar.organization", "samuelssantos"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.login", System.getenv("SONAR_TOKEN")
	}
}